changes required.
Again changes required.
Test change functionality

Microsoft Windows [Version 10.0.22000.1817]
(c) Microsoft Corporation. All rights reserved.

D:\Simplilearn\Github>git version
git version 2.40.1.windows.1

D:\Simplilearn\Github>git config --global user.name "kaurdeepraman321"

D:\Simplilearn\Github>git config --global user.email "kaurdeepraman321@gmail.com"

D:\Simplilearn\Github>git init
Initialized empty Git repository in D:/Simplilearn/Github/.git/

D:\Simplilearn\Github>git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Git1.txt

nothing added to commit but untracked files present (use "git add" to track)

D:\Simplilearn\Github>git add
Nothing specified, nothing added.
hint: Maybe you wanted to say 'git add .'?
hint: Turn this message off by running
hint: "git config advice.addEmptyPathspec false"

D:\Simplilearn\Github>git add *

D:\Simplilearn\Github>git add*
git: 'add*' is not a git command. See 'git --help'.

The most similar command is
        add

D:\Simplilearn\Github>git add README.md
fatal: pathspec 'README.md' did not match any files

D:\Simplilearn\Github>git satus
git: 'satus' is not a git command. See 'git --help'.

The most similar command is
        status

D:\Simplilearn\Github>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   Git1.txt


D:\Simplilearn\Github>git add &
Nothing specified, nothing added.
hint: Maybe you wanted to say 'git add .'?
hint: Turn this message off by running
hint: "git config advice.addEmptyPathspec false"

D:\Simplilearn\Github>git add *

D:\Simplilearn\Github>git add .

D:\Simplilearn\Github>git add *

D:\Simplilearn\Github>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   Git1.txt


D:\Simplilearn\Github>git rm --cached
fatal: No pathspec was given. Which files should I remove?

D:\Simplilearn\Github>git rm -- cached Git1
fatal: pathspec 'cached' did not match any files

D:\Simplilearn\Github>git rm --cached Git1
fatal: pathspec 'Git1' did not match any files

D:\Simplilearn\Github>git rm --cached Git1.txt
rm 'Git1.txt'

D:\Simplilearn\Github>git add *

D:\Simplilearn\Github>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   Git1.txt


D:\Simplilearn\Github>git add
Nothing specified, nothing added.
hint: Maybe you wanted to say 'git add .'?
hint: Turn this message off by running
hint: "git config advice.addEmptyPathspec false"

D:\Simplilearn\Github>git config --global user.name "kaurdeepraman321"

D:\Simplilearn\Github>git config --global user.email "kaurdeepraman321@gmail.com"

D:\Simplilearn\Github>git init
Initialized empty Git repository in D:/Simplilearn/Github/.git/

D:\Simplilearn\Github>git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        gitprac.txt

nothing added to commit but untracked files present (use "git add" to track)

D:\Simplilearn\Github>git add
Nothing specified, nothing added.
hint: Maybe you wanted to say 'git add .'?
hint: Turn this message off by running
hint: "git config advice.addEmptyPathspec false"

D:\Simplilearn\Github>git add *

D:\Simplilearn\Github>git add .

D:\Simplilearn\Github>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   gitprac.txt


D:\Simplilearn\Github>git commit -m "first commit"
[master (root-commit) 873f8be] first commit
 1 file changed, 1 insertion(+)
 create mode 100644 gitprac.txt

D:\Simplilearn\Github>git branch -M main

D:\Simplilearn\Github>git remote add origin https://github.com/kaurdeepraman321/simpliprac.git

D:\Simplilearn\Github>git push -u origin main
info: please complete authentication in your browser...
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 232 bytes | 11.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/kaurdeepraman321/simpliprac.git
 * [new branch]      main -> main
branch 'main' set up to track 'origin/main'.

D:\Simplilearn\Github>git branch raman

D:\Simplilearn\Github>GIT BRANCH
git: 'BRANCH' is not a git command. See 'git --help'.

D:\Simplilearn\Github>git brranch
git: 'brranch' is not a git command. See 'git --help'.

The most similar command is
        branch

D:\Simplilearn\Github>git branch
* main
  raman

D:\Simplilearn\Github>git pull
remote: Enumerating objects: 4, done.
remote: Counting objects: 100% (4/4), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 673 bytes | 2.00 KiB/s, done.
From https://github.com/kaurdeepraman321/simpliprac
   873f8be..f7aea05  main       -> origin/main
Updating 873f8be..f7aea05
Fast-forward
 git prac 2 | 2 ++
 1 file changed, 2 insertions(+)
 create mode 100644 git prac 2

D:\Simplilearn\Github>git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        gitprac 3.txt

nothing added to commit but untracked files present (use "git add" to track)

D:\Simplilearn\Github>git add
Nothing specified, nothing added.
hint: Maybe you wanted to say 'git add .'?
hint: Turn this message off by running
hint: "git config advice.addEmptyPathspec false"

D:\Simplilearn\Github>git add *

D:\Simplilearn\Github>git commit -m "new commit"
[main 8bda9c1] new commit
 1 file changed, 1 insertion(+)
 create mode 100644 gitprac 3.txt

D:\Simplilearn\Github>git branch -M main

D:\Simplilearn\Github>git push -u origin main
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 305 bytes | 101.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/kaurdeepraman321/simpliprac.git
   f7aea05..8bda9c1  main -> main
branch 'main' set up to track 'origin/main'.

D:\Simplilearn\Github>git branch -m raman
fatal: a branch named 'raman' already exists

D:\Simplilearn\Github>git branch
* main
  raman

D:\Simplilearn\Github>git branch -m gittest

D:\Simplilearn\Github>git branch
* gittest
  raman

D:\Simplilearn\Github>git switch main
Switched to a new branch 'main'
branch 'main' set up to track 'origin/main'.

D:\Simplilearn\Github>git switch raman
Switched to branch 'raman'

D:\Simplilearn\Github>git bracnh
git: 'bracnh' is not a git command. See 'git --help'.

The most similar command is
        branch

D:\Simplilearn\Github>git branch
  gittest
  main
* raman

D:\Simplilearn\Github>git checkout -b develop
Switched to a new branch 'develop'

D:\Simplilearn\Github>git checkout -b develop main
fatal: a branch named 'develop' already exists

D:\Simplilearn\Github>git checkout -b develop1 main
Switched to a new branch 'develop1'

D:\Simplilearn\Github>git branch
  develop
* develop1
  gittest
  main
  raman

D:\Simplilearn\Github>git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> develop1


D:\Simplilearn\Github>git merge main
Already up to date.

D:\Simplilearn\Github>mkdir newgit

D:\Simplilearn\Github>cd D:\Simplilearn\Github\newgit

D:\Simplilearn\Github\newgit>git init
Initialized empty Git repository in D:/Simplilearn/Github/newgit/.git/

D:\Simplilearn\Github\newgit>git add -a
error: unknown switch `a'
usage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --sparse              allow updating entries outside of the sparse-checkout cone
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


D:\Simplilearn\Github\newgit>git add *
fatal: pathspec '*' did not match any files

D:\Simplilearn\Github\newgit>git add *

D:\Simplilearn\Github\newgit>git commit -m "first commit"
[master (root-commit) c92eeea] first commit
 5 files changed, 334 insertions(+)
 create mode 100644 file 1.txt
 create mode 100644 file 2.txt
 create mode 100644 file 3.txt
 create mode 100644 file 4.txt
 create mode 100644 file 5.txt

D:\Simplilearn\Github\newgit>git branch -M main

D:\Simplilearn\Github\newgit>git remote add origin https://github.com/kaurdeepraman321/newgitrepo.git

D:\Simplilearn\Github\newgit>git push -u origin main
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (7/7), 2.47 KiB | 110.00 KiB/s, done.
Total 7 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/kaurdeepraman321/newgitrepo.git
 * [new branch]      main -> main
branch 'main' set up to track 'origin/main'.

D:\Simplilearn\Github\newgit>git checkout -b develop main
Switched to a new branch 'develop'

D:\Simplilearn\Github\newgit>git status
On branch develop
nothing to commit, working tree clean

D:\Simplilearn\Github\newgit>git add *

D:\Simplilearn\Github\newgit>git status
On branch develop
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   develop.txt


D:\Simplilearn\Github\newgit>git commit -M develop.txt
error: unknown switch `M'
usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend]
                  [--dry-run] [(-c | -C | --squash) <commit> | --fixup [(amend|reword):]<commit>)]
                  [-F <file> | -m <msg>] [--reset-author] [--allow-empty]
                  [--allow-empty-message] [--no-verify] [-e] [--author=<author>]
                  [--date=<date>] [--cleanup=<mode>] [--[no-]status]
                  [-i | -o] [--pathspec-from-file=<file> [--pathspec-file-nul]]
                  [(--trailer <token>[(=|:)<value>])...] [-S[<keyid>]]
                  [--] [<pathspec>...]

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup [(amend|reword):]commit
                          use autosquash formatted message to fixup or amend/reword specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    --trailer <trailer>   add custom trailer(s)
    -s, --signoff         add a Signed-off-by trailer
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <mode>      how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit and commit-msg hooks
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --ahead-behind        compute full ahead/behind values
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


D:\Simplilearn\Github\newgit>git commit -m "new develop branch"
[develop aef0099] new develop branch
 1 file changed, 1 insertion(+)
 create mode 100644 develop.txt

D:\Simplilearn\Github\newgit>git push -u origin develop
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 291 bytes | 145.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
remote:
remote: Create a pull request for 'develop' on GitHub by visiting:
remote:      https://github.com/kaurdeepraman321/newgitrepo/pull/new/develop
remote:
To https://github.com/kaurdeepraman321/newgitrepo.git
 * [new branch]      develop -> develop
branch 'develop' set up to track 'origin/develop'.

D:\Simplilearn\Github\newgit>git status
On branch develop
Your branch is up to date with 'origin/develop'.

nothing to commit, working tree clean

D:\Simplilearn\Github\newgit>git merge main
Already up to date.

D:\Simplilearn\Github\newgit>git merge main
Already up to date.

D:\Simplilearn\Github\newgit>git merge develop
Already up to date.

D:\Simplilearn\Github\newgit>git switch main
Switched to branch 'main'
Your branch is up to date with 'origin/main'.

D:\Simplilearn\Github\newgit>git merge main
Already up to date.

D:\Simplilearn\Github\newgit>git pull
remote: Enumerating objects: 6, done.
remote: Counting objects: 100% (6/6), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 4 (delta 1), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (4/4), 1.24 KiB | 5.00 KiB/s, done.
From https://github.com/kaurdeepraman321/newgitrepo
   c92eeea..59354d3  main       -> origin/main
   aef0099..973d9cf  develop    -> origin/develop
Updating c92eeea..59354d3
Fast-forward
 develop.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 develop.txt

D:\Simplilearn\Github\newgit>git pull
remote: Enumerating objects: 13, done.
remote: Counting objects: 100% (13/13), done.
remote: Compressing objects: 100% (8/8), done.
remote: Total 10 (delta 3), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (10/10), 2.58 KiB | 4.00 KiB/s, done.
From https://github.com/kaurdeepraman321/newgitrepo
   59354d3..cf8059c  main       -> origin/main
   973d9cf..a13fc07  develop    -> origin/develop
Updating 59354d3..cf8059c
Fast-forward
 develop 2 | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 develop 2

D:\Simplilearn\Github\newgit>
